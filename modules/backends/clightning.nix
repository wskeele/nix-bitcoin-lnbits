{ pkgs, config, lib, ... }@args:
let
  inherit (lib) mkIf mkDefault;
  cfg = config.services.lnbits;
  clightning = config.services.clightning;
  clightning-rest = config.services.clightning-rest;
in
{
  config = mkIf cfg.enable (lib.mkMerge [
    (mkIf (cfg.backend == "CoreLightningWallet" || cfg.backend == "CoreLightningRestWallet") {
      systemd.services.lnbits.after = [ "clightning.service" ];
    })

    (mkIf (cfg.backend == "CoreLightningWallet") {
      nix-bitcoin.netns-isolation.services.lnbits.connections = [ "clightning" ];
      users.users.lnbits.extraGroups = [ clightning.group ];
      services.lnbits.env = {
        CORELIGHTNING_RPC = "${clightning.dataDir}/bitcoin/lightning-rpc";
      };
    })

    (mkIf (cfg.backend == "CoreLightningRestWallet")
      {
        nix-bitcoin.netns-isolation.services.lnbits.connections = [ "clightning-rest" ];

        # DOMAIN sets the host allowed by the self-signed cert generated by clightning-rest
        # This will not work with a raw IP address, so place an entry in /etc/hosts
        networking.extraHosts =
          let
            address =
              if clightning-rest.address == "0.0.0.0" then
                "127.0.0.1"
              else
                clightning-rest.address;
          in
          ''
            ${address} clightning-rest.local
          '';

        services.clightning-rest.extraConfig = mkDefault ({
          DOMAIN = "clightning-rest.local";
        });

        services.lnbits.env = {
          CORELIGHTNING_REST_URL = "https://${clightning-rest.extraConfig.DOMAIN}:${builtins.toString clightning-rest.port}/";
          CORELIGHTNING_REST_MACAROON = "${clightning-rest.dataDir}/certs/access.macaroon";
          CORELIGHTNING_REST_CERT = "${clightning-rest.dataDir}/certs/certificate.pem";
        };

        users.users.lnbits.extraGroups = [ clightning-rest.group ];

      }
    )
  ]);
}
